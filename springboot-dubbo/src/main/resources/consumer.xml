<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    					http://www.springframework.org/schema/beans/spring-beans.xsd 
    					http://code.alibabatech.com/schema/dubbo 
    					http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
 
    <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->
    <dubbo:application name="dubbo-consumer">
        <!-- 同一台电脑上同时跑provider/consumer，不配置启动时报qos绑定地址错误 -->
        <dubbo:parameter key="qos.enable" value="false" />
    </dubbo:application>

    <!-- 注册中心地址 -->
    <dubbo:registry address="zookeeper://192.168.0.102:2181" />
    
    <!-- 生成远程服务代理，可以和本地bean一样使用service，这里需要设置id，否则无法注入spring-context -->
    <dubbo:reference id="helloService" interface="com.asiainfo.dubbo.config.service.HelloService" check="false" version="1.0.0" />
    
    <!-- merge -->
    <dubbo:reference id="menuService" interface="com.asiainfo.dubbo.merge.MenuService" group="*" merger="true" />
    
    <!-- version -->
    <!-- <dubbo:reference id="helloService" interface="com.asiainfo.dubbo.config.service.HelloService" version="*" /> -->
    
    <!-- group -->
    <!-- 
    <dubbo:reference group="groupA" id="groupAService" check="false" interface="org.apache.dubbo.samples.group.api.GroupService" />
    <dubbo:reference group="groupB" id="groupBService" check="false" interface="org.apache.dubbo.samples.group.api.GroupService" /> -->
        
    <!-- mock -->
    <!-- <dubbo:reference id="helloService" interface="com.asiainfo.dubbo.config.service.HelloService" mock="true" /> -->

    <!-- cache -->
    <!-- <dubbo:reference id="helloService" interface="com.asiainfo.dubbo.config.service.HelloService" cache="true" /> -->
    
    <!-- notify -->
    <!-- <bean id="myNotify" class="com.asiainfo.dubbo.notify.MyNotify" />
    <dubbo:reference id="helloService" interface="com.asiainfo.dubbo.config.service.HelloService" check="false">
        <dubbo:method name="hello" async="true" oninvoke="myNotify.oninvoke" onreturn="myNotify.onreturn" onthrow="myNotify.onthrow" />
    </dubbo:reference> -->
</beans>